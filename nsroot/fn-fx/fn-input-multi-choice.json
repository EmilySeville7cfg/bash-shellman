{
  "prefix": [
    "fn checkbox",
    "fn input multichoice"
  ],
  "body": [
    "# Usage: multiChoice \"header message\" resultArray \"comma separated options\" \"comma separated default values\"",
    "# Credit: https://serverfault.com/a/949806",
    "# TODO: 1) Refactoring to return result array 2) Get input options as array",
    "function multiChoice {",
    "\techo \"\\${1\\}\"; shift",
    "\techo \\$(tput dim)-\"Change Option: [up/down], Change Selection: [space], Done: [ENTER]\" \\$(tput sgr0)",
    "\t# little helpers for terminal print control and key input",
    "\tESC=\\$( printf \"\\033\")",
    "\tcursor_blink_on()   { printf \"\\$ESC[?25h\"; }",
    "\tcursor_blink_off()  { printf \"\\$ESC[?25l\"; }",
    "\tcursor_to()         { printf \"\\$ESC[\\$1;\\${2:-1}H\"; }",
    "\tprint_inactive()    { printf \"\\$2   \\$1 \"; }",
    "\tprint_active()      { printf \"\\$2  \\$ESC[7m \\$1 \\$ESC[27m\"; }",
    "\tget_cursor_row()    { IFS=';' read -sdR -p \\$'\\E[6n' ROW COL; echo \\${ROW#*[}; }",
    "\tkey_input()         {",
    "\t\tlocal key",
    "\t\tIFS= read -rsn1 key 2>/dev/null >&2",
    "\t\tif [[ \\$key = \"\"      ]]; then echo enter; fi;",
    "\t\tif [[ \\$key = \\$'\\x20' ]]; then echo space; fi;",
    "\t\tif [[ \\$key = \\$'\\x1b' ]]; then",
    "\t\t\tread -rsn2 key",
    "\t\t\tif [[ \\$key = [A ]]; then echo up;    fi;",
    "\t\t\tif [[ \\$key = [B ]]; then echo down;  fi;",
    "\t\tfi",
    "\t}",
    "\ttoggle_option()    {",
    "\t\tlocal arr_name=\\$1",
    "\t\teval \"local arr=(\\\"\\\\${\\${arr_name}[@]}\\\")\"",
    "\t\tlocal option=\\$2",
    "\t\tif [[ \\${arr[option]} == 1 ]]; then",
    "\t\t\tarr[option]=0",
    "\t\telse",
    "\t\t\tarr[option]=1",
    "\t\tfi",
    "\t\teval \\$arr_name='(\"\\${arr[@]}\")'",
    "\t}",
    "",
    "\tlocal retval=\\$1",
    "\tlocal options",
    "\tlocal defaults",
    "",
    "\tIFS=';' read -r -a options <<< \"\\$2\"",
    "\tif [[ -z \\$3 ]]; then",
    "\t\tdefaults=()",
    "\telse",
    "\t\tIFS=';' read -r -a defaults <<< \"\\$3\"",
    "\tfi",
    "",
    "\tlocal selected=()",
    "",
    "\tfor ((i=0; i<\\${#options[@]}; i++)); do",
    "\t\tselected+=(\"\\${defaults[i]}\")",
    "\t\tprintf \"\\n\"",
    "\tdone",
    "",
    "\t# determine current screen position for overwriting the options",
    "\tlocal lastrow=\\$(get_cursor_row)",
    "\tlocal startrow=\\$((\\$lastrow - \\${#options[@]}))",
    "",
    "\t# ensure cursor and input echoing back on upon a ctrl+c during read -s",
    "\ttrap \"cursor_blink_on; stty echo; printf '\\n'; exit\" 2",
    "\tcursor_blink_off",
    "",
    "\tlocal active=0",
    "\twhile true; do",
    "\t\t# print options by overwriting the last lines",
    "\t\tlocal idx=0",
    "\t\tfor option in \"\\${options[@]}\"; do",
    "\t\t\tlocal prefix=\"[ ]\"",
    "\t\t\tif [[ \\${selected[idx]} == 1 ]]; then",
    "\t\t\t\tprefix=\"[x]\"",
    "\t\t\tfi",
    "",
    "\t\t\tcursor_to \\$((\\$startrow + \\$idx))",
    "\t\t\tif [ \\$idx -eq \\$active ]; then",
    "\t\t\t\tprint_active \"\\$option\" \"\\$prefix\"",
    "\t\t\telse",
    "\t\t\t\tprint_inactive \"\\$option\" \"\\$prefix\"",
    "\t\t\tfi",
    "\t\t\t((idx++))",
    "\t\tdone",
    "",
    "\t\t# user key control",
    "\t\tcase \\$(key_input) in",
    "\t\t\tspace)  toggle_option selected \\$active;;",
    "\t\t\tenter)  break;;",
    "\t\t\tup)     ((active--));",
    "\t\t\t\tif [ \\$active -lt 0 ]; then active=\\$((\\${#options[@]} - 1)); fi;;",
    "\t\t\tdown)   ((active++));",
    "\t\t\t\tif [ \\$active -ge \\${#options[@]} ]; then active=0; fi;;",
    "\t\tesac",
    "\tdone",
    "",
    "\t# cursor position back to normal",
    "\tcursor_to \\$lastrow",
    "\tprintf \"\\n\"",
    "\tcursor_blink_on",
    "",
    "\tindices=()",
    "\tfor((i=0;i<\\${#selected[@]};i++)); do",
    "\t\tif ((\\${selected[i]} == 1)); then",
    "\t\t\tindices+=(\\${i})",
    "\t\tfi",
    "\tdone",
    "",
    "\t# eval \\$retval='(\"\\${selected[@]}\")'",
    "\teval \\$retval='(\"\\${indices[@]}\")'",
    "}\n"
  ],
  "description": "provides a list of choices to user and returns the index of selected choices"
}